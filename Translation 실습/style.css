/* ▼ WHERE YOUR CODE BEGINS */

/* all 초기세팅: box-sizing, margin */
* {
	box-sizing: border-box;
	margin: 0;
}

/* body 초기세팅: font-family, (background-color) */
/* (요소를 가운데정렬 하고 싶다면 width, height, flex) */
body {
	font-family: 'Lato', sans-serif;
	background-color:rgb(199, 199, 199);

	width: 100%;
	height: 100vh;
	display: flex;
	justify-content: center;
	align-items: center;
}

/* form과 관련된 요소들은 body에 font-family 줘도 잘 안 먹음 */
/* => 모든 button, input, textarea의 font-family는 Lato로 하라고 따로 선언 */
button,
input,
textarea {
	font-family: 'Lato', sans-serif;
}

/* 모든 button에 적용된 기본스타일 해제하기 */
button {
	border: none;
	background: #fff;
}

.line-button {
	/* font-size와 padding만으로 박스 만들기 (안의 내용물 크기에 맞춰 박스 만듦)
			=> 따로 width, height 필요없음 */
	padding: 18px 30px;
	font-size: 16px;
	/* font-size 적용 시 line-height 빼 먹지 말기 */
	line-height: 20/16; /* 1.25 */
	/* 글자색도 꼭 확인 (그냥 검정같아 보이지만 아닌 경우 많음) */
	color: #151B26;

	position: relative;
	cursor: pointer;
}

/* transition을 border-bottom으로 주려고 하면 안 먹힘 */
/*  => 가상요소(::before, ::after) 활용해야 */
/* hover 상태가 아닐 때는 width를 0으로 주고
	hover 상태일 때는 width를 100%로 준다 */
/* 	++ 가상요소가 버튼 안쪽에 고정되어 있어야 하므로 absolute 사용 */

/* ** transition은 line-button이 아닌 line-button::after에 줘야 함
	이유: 바뀌는 속성인 width가 line-button::after에 있어서 */

.line-button::after {
	content: '';

	/* after 가상요소는 inline이지만, absolute 주면 block으로 자동 신분상승
		(따로 display: block 줄 필요없음) */
	position: absolute;

	/* absolute 주고 나서 반드시 top, left 선언 */
	left: 0;
	bottom: 0;
	
	/* 0을 적을 때는 '0px' 이렇게 적지 않고 0만 적는 게 정석 */
	width: 0;
	height: 2px;
	background-color: #0066ff;

	/* 작은 버튼에 transition 줄 때는 보통 250ms(0.25s)를 많이 씀 */
	/* 여러 요소를 '스르륵' 바뀌게 하고 싶다면 ',' 찍고 다음 요소 작성 */
	transition: width 250ms ease-in, background-color 250ms ease-in;
}

/* 'line-button에 마우스가 올라갔을 때(hover)
	가상요소(::after)의 css가 변화' => 작성순서 중요! */
.line-button:hover::after {  
	width: 100%;
	background-color: hotpink;
}